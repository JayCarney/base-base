@import 'variables';
@import 'helpers';
@import 'font-settings/font-settings-12';
@import 'font-settings/font-settings-14';
@import 'font-settings/font-settings-16';

// All adjustments are in rem which != baseline, so need to convert by $adjustment =  $base-line / $base-font-size * $adjustment

$base-base-fonts: (
  12px: $base-base-fonts-12,
  14px: $base-base-fonts-14,
  16px: $base-base-fonts-16
);


///
/// add $line-height of padding to start of this item
/// @group Base-Base
/// @param $base-lines [1] Number of baselines of padding to add
/// @param $font-size [null] Font size of this item, setting this will cause base-base to return the padding adjusted for the baselineing value
/// @param $font-family [$default-font-family] Font familty used for baseline lookup (only used when font-size has been set)
/// @param $line-height [lines-for-font-size($font-size)] Line height used for baseline lookup
/// @param $weight [400] Font weight used for baseline lookup
///
@mixin padding-leader(
  $base-lines: 1,
  $font-size: null,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size),
  $weight: 400
  ){
  @if($font-size != null){
    $base-lines: $base-lines + get-base($font-size,$font-family,$line-height,$weight);
  }
  // $adjustment: $base-lines / $base-line-height;
  padding-top: baseline2rem($base-lines);
};

///
/// add $line-height of padding to end of this item
/// @group Base-Base
/// @param $base-lines [1] Number of baselines of padding to add
/// @param $font-size [$base-font-size] Font size of this item
/// @param $adjust [false] Add baseline adjustments from base-base font database (useful for working with text)
/// @param $font-family [$default-font-family] Font familty used for baseline adjustments from database (only used when adjust set to true)
/// @param $line-height [lines-for-font-size($font-size)] Line height used when checking for baseline adjustments (only used when adjust set to true)
/// @param $weight [400] Font weight used when checking for baseline adjustments (only used when adjust set to true)
///
@mixin padding-trailer(
  $base-lines: 1,
  $font-size: null,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size),
  $weight: 400
  ){
  @if($font-size != null){
    $base-lines: $base-lines - get-base($font-size,$font-family,$line-height,$weight);
  }
  // $adjustment: $base-lines / $base-line-height;
  padding-bottom: baseline2rem($base-lines);
};

///
/// add $line-height of margin to start of this item
/// @group Base-Base
/// @param $line-height [1] Number of baselines of margin to add
/// @param $font-size [$base-font-size] Font size of this item
/// @param $adjust [false] Add baseline adjustments from base-base font database (useful for working with text)
/// @param $font-family [$default-font-family] Font familty used for baseline adjustments from database (only used when adjust set to true)
/// @param $line-height [lines-for-font-size($font-size)] Line height used when checking for baseline adjustments (only used when adjust set to true)
/// @param $weight [400] Font weight used when checking for baseline adjustments (only used when adjust set to true)
///
@mixin margin-leader(
  $base-lines: 1,
  $font-size: null,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size),
  $weight: 400
  ){
  @if($font-size != null){
    $base-lines: $base-lines + get-base($font-size,$font-family,$line-height,$weight);
  }
  // $adjustment: $base-lines / $base-line-height;
  margin-top: baseline2rem($base-lines);
};

///
/// add $line-height of margin to end of this item
/// @group Base-Base
/// @param $line-height [1] Number of baselines of margin to add
/// @param $font-size [$base-font-size] Font size of this item
/// @param $adjust [false] Add baseline adjustments from base-base font database (useful for working with text)
/// @param $font-family [$default-font-family] Font familty used for baseline adjustments from database (only used when adjust set to true)
/// @param $line-height [lines-for-font-size($font-size)] Line height used when checking for baseline adjustments (only used when adjust set to true)
/// @param $weight [400] Font weight used when checking for baseline adjustments (only used when adjust set to true)
///
@mixin margin-trailer(
  $base-lines: 1,
  $font-size: null,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size),
  $weight: 400
  ){
  @if($font-size != null){
    $base-lines: $base-lines - get-base($font-size,$font-family,$line-height,$weight);
  }
  // $adjustment: $base-lines / $base-line-height;
  margin-bottom: baseline2rem($base-lines);
};

///
/// remove vertical margin and padding, reset font sizes etc to default
/// @group Base-Base
/// @param  $base-line-height [$base-line-height] Base line height to set this item to
///
@mixin neutralise($base-line-height: $base-line-height){
  font-family: $default-font-family, $fallback-font-stack;
  @if $base-use-rem {
    font-size: 1rem;
  } @else {
    font-size: $base-font-size;
  }
  line-height: $base-line-height;
  margin:{
    top: 0;
    bottom: 0;
  }
  padding:{
    top: 0;
    bottom: 0;
  }
}

///
/// returns baselines nessasary for this font size given a minimum padding of 2px
/// @access private
/// @group Base-Base
/// @param  $font-size [$base-font-size] Font size to check
/// @param  $base-line-height [$base-line-height] Base line height
///
@function lines-for-font-size(
  $font-size: $base-font-size,
  $base-line-height: $base-line-height
  ){
  $min-line-padding: 1px;
  $line-height: 1;
  
  @if $font-size != null {
    $line-height: ceil($font-size/$base-line-height);
  }

  @if($line-height * $base-line-height - $font-size < $min-line-padding * 2){
    $line-height: $line-height + 1;
  }
  
  @return $line-height;
}

///
/// Establish default font size and line-height of an item
/// @group Base-Base
/// @param  $font-size [$base-font-size] Base font size
/// @param  $base-line-height [$base-line-height] Base line height
///
@mixin establish-baseline($font-size: $base-font-size, $base-line-height: $base-line-height) {
    font-size: $font-size;
    line-height: lines-for-font-size($font-size) * $base-line-height;
}

///
/// returns leading baselines of adjustment from base-base database for the given font settings
/// @group Base-Base
/// @access private
/// @param  $font-size [$base-font-size] Font size
/// @param  $font-family [$default-font-family] Font family
/// @param  $line-height [lines-for-font-size($font-size)] Number of baselines to use for line-height
/// @param  $weight [400] Font weight using numeric keywod values
/// @param  $base-line-height [$base-line-height] Baseline height
///
@function get-base(
  $font-size: $base-font-size,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size),
  $weight: 400,
  $base-line-height: $base-line-height
  ){
  $original-font-family: $font-family;
  @if $weight != 400 {
    // 400 does not use a suffixes name as it's used as the default, not all fonts require bold varients to be correctly baselined
    $font-family: $font-family + ":" + $weight;
  }
  @if map-has-key($base-base-fonts, $base-line-height){
    $base-line-settings: map-get($base-base-fonts, $base-line-height);
    $cleaned-font-family: str-replace(to-lower-case($font-family),' ','-');
    @if map-has-key($base-line-settings,$cleaned-font-family){
      $font-settings: map-get($base-line-settings,$cleaned-font-family);
      @if map-has-key($font-settings, $font-size){
        $size-settings: map-get($font-settings, $font-size);
        @if map-has-key($size-settings, $line-height){
          @return map-get($size-settings, $line-height);
        } @else {
          @return map-get($size-settings, 'd');
        }
      } @else {
        // no font size exists
        @if $weight != 400{
          // return the "normal" variant of this font instead
          @return get-base($font-size, $original-font-family, $line-height, $base-line-height, 400);
        }
      }
    } @else {
      // no font family exists
      @if $weight != 400 {
        // return the "normal" variant of this font instead
        @return get-base($font-size, $original-font-family, $line-height, $base-line-height, 400);
      }
    }
  }
  @warn "Base-Base: No font settings found for: #{$font-size}, #{$original-font-family}, #{$line-height}, #{$base-line-height}, #{$weight}";
  @return 0 //No size found;
}

///
/// returns trailing baselines of adjustment from base-base database for the given font settings
/// @group Base-Base
/// @access private
/// @param  $font-size [$base-font-size] Font size
/// @param  $font-family [$default-font-family] Font family
/// @param  $line-height [lines-for-font-size($font-size)] Number of baselines to use for line-height
/// @param  $base-line-height [$base-line-height] Baseline height
/// @param  $weight [400] Font weight
///
@function get-bottom-base(
  $font-size: $base-font-size,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size),
  $base-line-height: $base-line-height,
  $weight: 400
  ){
  @return 1 - get-base($font-size, $font-family, $line-height, $base-line-height, $weight);
}

///
/// returns baselines of adjustment from base-base database for the given font settings
/// @group Base-Base
/// @example
///   .example_text {
///     // all options
///     @include base-base(24px, 'Open Sans', 2, 0, 'Sans-Serif', 16px, 400);
///     // minimal call
///     @include base-base(24px);
///   }
/// @param  $font-size [$base-font-size] Font size
/// @param  $font-family [$default-font-family] Font family
/// @param  $trailer [null] Trailing baselines of whitespace
/// @param  $leader [0] Leading baselines of whitespace
/// @param  $line-height [lines-for-font-size($font-size, $base-line-height)] Number of baselines to use for line-height
/// @param  $fallback-font-stack [$fallback-font-stack] Fallback font stack
/// @param  $base-line-height [$base-line-height] Base line height
/// @param  $weight [400] Font weight
///
@mixin base-base(
  $font-size: $base-font-size,
  $font-family: $default-font-family,
  $trailer: 1,
  $leader: 0,
  $line-height: lines-for-font-size($font-size, $base-line-height),
  $fallback-font-stack: $fallback-font-stack,
  $base-line-height: $base-line-height,
  $weight: 400
){
  // $base_adjust: get-base($font-size, $font-family, $line-height, $base-line-height, $weight);
  margin-top: 0;
  margin-bottom: 0;
  @include padding-leader($leader, $font-size, $font-family, $line-height, $weight);
  @include padding-trailer($trailer, $font-size, $font-family, $line-height, $weight);
  font-size: #{$font-size / $base-font-size}rem;
  line-height: $line-height * $base-line-height;
  font-family: $font-family, $fallback-font-stack;
  font-weight: $weight;
}

///
/// Set the background of an item to a debug grid
/// @group Base-Base
/// @example
///   .item{
///     @include debug_baseline(true, 16px, 0px);
///     // minimal call
///     @include debug_baseline();
///   }
/// @param  $pseudo [false] Use a pseudo element instead of this item
/// @param  $base-line-height [$base-line-height] Baseline height
/// @param  $offset [0px] Grid offset
///
@mixin debug_baseline($pseudo:false, $base-line-height:$base-line-height, $offset:0px){
  @if $visual-grid == true or $visual-grid == yes {
    @if $pseudo == false {
      background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5) 0px, rgba(0, 0, 0, 0) 1px);
      background-size: 100% $base-line-height;
      background-position: left $offset;
    } @else {
      position: relative;
      > * {
        position: relative;
        z-index: 1;
      }
      &:after{
        content: '';
        display: block;
        position: absolute;
        top: $offset;
        left: 0;
        right: 0;
        bottom: 0;
        @include debug_baseline($base-line-height: $base-line-height);
        pointer-events: none;
        z-index: 0;
      }
    }
  }
}

///
/// @group Base-Base
///
@mixin prep_root(){
  @at-root{
    html {
      font-size: $base-font-size;
      line-height: $base-line-height;
      font-family: $default-font-family, $fallback-font-stack;
      margin: 0;
    }
  }
}